name: classicube
base: core22
summary: Custom Minecraft Classic / ClassiCube client
adopt-info: classicube
description: |
  ClassiCube is a custom Minecraft Classic compatible client written in C
  that works on Windows, macOS, Linux, iOS, Android, FreeBSD, NetBSD, OpenBSD, 
  Solaris, Haiku, IRIX, 3DS (unfinished), PSP (unfinished), and in a web browser.
  It is not affiliated with (or supported by) Mojang AB, Minecraft, or Microsoft 
  in any way.

grade: stable
confinement: strict
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
  # https://discourse.ubuntu.com/t/the-graphics-core20-snap-interface/23000
  /usr/share/libdrm:
    bind: $SNAP/graphics/usr/share/libdrm
  /usr/share/drirc.d:
    bind: $SNAP/graphics/usr/share/drirc.d
  /usr/share/glvnd/egl_vendor.d:
    bind: $SNAP/graphics/usr/share/glvnd/egl_vendor.d
  /usr/lib/x86_64-linux-gnu/alsa-lib:
    bind: $SNAP/usr/lib/x86_64-linux-gnu/alsa-lib
  /usr/share/X11/xkb:
    bind: $SNAP/usr/share/X11/xkb
  /usr/lib/x86_64-linux-gnu/libvulkan_intel.so:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libvulkan_intel.so
  /usr/lib/i386-linux-gnu/libvulkan_intel.so:
    symlink: $SNAP/graphics/usr/lib/i386-linux-gnu/libvulkan_intel.so
  /usr/lib/x86_64-linux-gnu/libvulkan_lvp.so:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libvulkan_lvp.so
  /usr/lib/i386-linux-gnu/libvulkan_lvp.so:
    symlink: $SNAP/graphics/usr/lib/i386-linux-gnu/libvulkan_lvp.so
  /usr/lib/x86_64-linux-gnu/libvulkan_radeon.so:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libvulkan_radeon.so
  /usr/lib/i386-linux-gnu/libvulkan_radeon.so:
    symlink: $SNAP/graphics/usr/lib/i386-linux-gnu/libvulkan_radeon.so
  /usr/lib/x86_64-linux-gnu/libxcb-dri3.so.0.0.0:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libxcb-dri3.so.0.0.0
  /usr/lib/x86_64-linux-gnu/libxcb-dri3.so.0:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libxcb-dri3.so.0.0.0
  /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
  /usr/lib/x86_64-linux-gnu/libxcb.so:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
  /usr/lib/x86_64-linux-gnu/libxcb.so.1:
    symlink: $SNAP/graphics/usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0
  /etc/ld.so.cache:
    bind-file: $SNAP_DATA/etc/ld.so.cache
  /etc/fonts:
    bind: $SNAP/etc/fonts

plugs:
  gaming-mesa:
    interface: content
    target: $SNAP/graphics
    default-provider: gaming-graphics-core22

environment:
  LD_LIBRARY_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/:$SNAP/graphics/lib/i386-linux-gnu:$SNAP/graphics/usr/lib:$SNAP/usr/lib/i386-linux-gnu:$SNAP/lib/i386-linux-gnu:$SNAP/usr/lib/i386-linux-gnu/pulseaudio${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
  LIBGL_DRIVERS_PATH: $SNAP/graphics/usr/lib/i386-linux-gnu/dri:$SNAP/graphics/usr/lib/x86_64-linux-gnu/dri:${LIBGL_DRIVERS_PATH:+:$LIBGL_DRIVERS_PATH}

parts:
  launcher:
    plugin: dump
    source: snap/local
  alsa-mixin:
    plugin: dump
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    source-subdir: snapcraft-assets
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins
      - yad
    stage:
      # restrict to only audio-related files - you need to ensure
      # that gtk3 is staged for yad to work correctly, to prompt
      # users to connect the alsa plug or proceed with pulseaudio.
      #
      # This helps prevent symbol conflicts in situations where
      # you're using a non-default library, such as those that the
      # gnome-3-34 extension for core18 provides.
      - etc/asound.conf
      - snap/command-chain/alsa-launch
      - usr/bin/yad*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libasound*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libdnsfile*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libFLAC*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libjack*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpulse*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libsamplerate*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libspeex*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvorbis*
      - usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio
  classicube:
    plugin: make
    after: [alsa-mixin]
    source: https://github.com/UnknownShadow200/ClassiCube.git
    override-pull: |
      #set -x
      snapcraftctl pull
      last_committed_tag="$(git describe --tags --abbrev=0)"
      last_committed_tag_ver="$(echo ${last_committed_tag} | sed 's/v//')"
      #last_released_tag="$(snap info $CRAFT_PROJECT_NAME | awk '$1 == "latest/beta:" { print $2 }')"
      last_released_tag=0
      if [ "${last_committed_tag_ver}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        cd ../src
        git checkout "${last_committed_tag}"
      fi
      craftctl set version="$(git describe --tags | cut -d- -f2-4 )"
    override-build: |
      #set -x
      cd src/
      gcc *.c -o ClassiCube -rdynamic -lm -lpthread -lX11 -lXi -lGL -ldl
      cp ../credits.txt ../license.txt ClassiCube $CRAFT_PART_INSTALL
    build-packages:
      - libx11-dev
      - libxi-dev
      - libgl1-mesa-dev
      - libasound2-dev
    stage-packages:
      - libopenal1
      - libasound2
      - libx11-6
      - libxi6
      - libgl1
      - libxcb1
      - libxext6
      - libglvnd0
      - libglx0
      - libxau6
      - libxdmcp6
      - libbsd0
      - libmd0
      - libcurl4
  cleanup:
    after: [classicube]
    plugin: nil
    build-snaps:
      - gaming-graphics-core22/kisak-fresh/candidate
    override-prime: |
      set -eux
      cd /snap/gaming-graphics-core22/current/usr/lib
      find . -type f,l -exec rm -f $CRAFT_PRIME/usr/lib/{} \;
      cd /snap/gaming-graphics-core22/current/usr/share
      find . -type f,l -exec rm -f $CRAFT_PRIME/usr/share/{} \;

apps:
  classicube:
    extensions: [gnome]
    command-chain: ["snap/command-chain/alsa-launch"]
    environment:
      ALWAYS_USE_PULSEAUDIO: '1'
      GTK_PATH: $SNAP/lib/gtk-2.0
      GTK_DATA_PREFIX: $SNAP
      XDG_DATA_DIRS: $SNAP/share:$XDG_DATA_DIRS
    command: bin/launcher
    plugs:
      - joystick
      - x11
      - opengl
      - audio-playback
      - alsa
      - network
      - network-bind
      - home
      - removable-media
      - wayland


